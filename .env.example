# WildDuck Environment Variables Configuration
# Copy this file to .env and fill in your values
# For local development overrides, create .env.local (not tracked by git)

# =============================================================================
# DEPLOYMENT CONFIGURATION (GitHub Actions)
# =============================================================================

# SSH private key for deployment server access
# Used in: .github/workflows/deploy.yml
# Format: PEM private key (multi-line, include -----BEGIN/END----- headers)
# Required for: Automated deployment to production servers
SSH_KEY=your_ssh_private_key_here

# Known hosts entries for SSH connections
# Used in: .github/workflows/deploy.yml
# Format: hostname ssh-rsa AAAAB3... (standard SSH known_hosts format)
# Example: srv-04.srv.dev ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQ...
# Required for: Secure SSH connections during deployment
KNOWN_HOSTS=your_known_hosts_entry_here

# =============================================================================
# RELEASE NOTIFICATIONS
# =============================================================================

# Webhook URL for release notifications (Slack/Discord/Teams)
# Used in: .github/workflows/release.yml
# Format: Full webhook URL (https://hooks.slack.com/services/... or similar)
# Required for: Automated notifications when releases are deployed
ZONE_WEBHOOK_URL=https://your-webhook-url.com/webhook

# =============================================================================
# GITHUB ACTIONS SECRETS (Set in GitHub repository settings)
# =============================================================================

# GitHub token for creating releases (automatically provided by GitHub)
# GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# NPM publishing token for automated package publishing
# Get from: https://www.npmjs.com/settings/tokens
# Required for: Publishing to NPM registry
# NPM_TOKEN=npm_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Docker Hub credentials for image publishing
# Get from: https://hub.docker.com/settings/security
# Required for: Publishing Docker images
# DOCKERHUB_USERNAME=your_dockerhub_username
# DOCKERHUB_TOKEN=dckr_pat_xxxxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Indexer IP address
# Used in: Authentication and signature verification
# Format: IP address or hostname
# Required for: Indexer service connection
INDEX_IP_ADDRESS=your_indexer_ip_here

# Wallet address for the indexer service
# Used in: Authentication and signature verification
# Format: EVM address (0x...) or Solana address (Base58)
# Required for: Indexer service authentication
INDEXER_WALLET_ADDRESS=your_wallet_address_here

# Enable authentication rate limiting
# Used in: lib/user-handler.js
# Default: false (disabled for development)
# Values: 'true' to enable, any other value to disable
# Required for: Production security (prevents brute force attacks)
ENABLE_RATE_LIMITING=false

# UV threadpool size for Node.js I/O operations
# Used in: server.js
# Default: 16
# Range: 4-128 (recommended: 16-32 for most deployments)
# Required for: Optimizing I/O performance
UV_THREADPOOL_SIZE=16

# =============================================================================
# DATABASE CONFIGURATION (Optional - can use TOML config instead)
# =============================================================================

# MongoDB connection string
# Example: mongodb://localhost:27017/wildduck
# MONGODB_URL=mongodb://localhost:27017/wildduck

# Redis connection string
# Example: redis://localhost:6379/0
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Node.js environment
# Values: development, production, test
# Default: development
NODE_ENV=development

# Enable debug logging for test queries
# Used in: lib/search-query.js
# Values: 'true' to enable debug output
# DEBUG_TEST_QUERY=false

# Enable debug console for IMAP core testing
# Used in: imap-core/test/protocol-test.js
# Values: 'true' to enable console debugging
# DEBUG_CONSOLE=false

# Generate API documentation on startup
# Used in: api.js
# Values: 'true' to generate docs, 'regenerate' to force regeneration
# GENERATE_API_DOCS=false
# REGENERATE_API_DOCS=false

# Print configuration only (don't start server)
# Used in: server.js
# Values: 'true' to print config and exit
# NODE_CONFIG_ONLY=false

# Disable TLS certificate verification (DEVELOPMENT ONLY)
# Used in: test files
# WARNING: Never use in production
# NODE_TLS_REJECT_UNAUTHORIZED=1

# =============================================================================
# DKIM CONFIGURATION (For Zone MTA setup)
# =============================================================================

# Domain for DKIM signing
# Used in: setup/09_install_zone_mta.sh
# Example: yourdomain.com
# DOMAIN=yourdomain.com

# DKIM selector
# Used in: setup/09_install_zone_mta.sh
# Example: default, mail, dkim
# SELECTOR=default

# =============================================================================
# USAGE NOTES
# =============================================================================

# 1. Copy this file to .env for your main configuration
# 2. Create .env.local for local development overrides (ignored by git)
# 3. Set GitHub repository secrets for deployment variables
# 4. Never commit sensitive values to version control
# 5. Use descriptive values in production for debugging
# 6. Regular values can also be configured via TOML files in config/
# 7. Environment variables take precedence over TOML configuration