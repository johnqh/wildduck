on:
    push:
        branches:
            - master

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.event.repository.name }}
    PACKAGE_NAME: ${{ github.event.repository.name }}

name: release
jobs:
    get_version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.package_version.outputs.version }}
            major: ${{ steps.parse_version.outputs.major }}
            minor: ${{ steps.parse_version.outputs.minor }}
            patch: ${{ steps.parse_version.outputs.patch }}
        steps:
            - uses: actions/checkout@v4

            - name: Get package version
              id: package_version
              run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

            - name: Parse version
              id: parse_version
              run: |
                  VERSION=${{ steps.package_version.outputs.version }}
                  echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
                  echo "minor=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
                  echo "patch=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

    publish_npm:
        permissions:
            contents: write
            id-token: write
        runs-on: ubuntu-latest
        needs: get_version
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: 'https://registry.npmjs.org'

            - run: npm ci

            - run: npm publish --provenance --access public
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    create_release:
        name: Create GitHub release
        runs-on: ubuntu-latest
        needs: [get_version, publish_npm]
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create git tag
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git tag -a "v${{needs.get_version.outputs.version}}" -m "Release v${{needs.get_version.outputs.version}}" || echo "Tag already exists"
                  git push origin "v${{needs.get_version.outputs.version}}" || echo "Tag already pushed"

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install dependencies
              run: npm install --omit=dev

            - name: Move files to temporary directory
              run: |
                  mkdir -p ${{ runner.temp }}/release_build
                  cp -R . ${{ runner.temp }}/release_build/

            - name: Create zip archive
              run: |
                  # Create a zip archive excluding .git directory
                  ROOT_DIR=$(pwd)
                  cd ${{ runner.temp }}/release_build
                  zip -r $ROOT_DIR/${{env.PACKAGE_NAME}}-${{needs.get_version.outputs.version}}.zip . -x "*.git" "*.git/*"
                  cd $ROOT_DIR

            - name: Create tar.gz archive
              run: |
                  # Create a tar.gz archive excluding .git directory
                  tar --exclude='.git' --exclude='.git/*' -czf ${{env.PACKAGE_NAME}}-${{needs.get_version.outputs.version}}.tar.gz -C ${{ runner.temp }}/release_build/ .

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      ${{env.PACKAGE_NAME}}-${{needs.get_version.outputs.version}}.zip
                      ${{env.PACKAGE_NAME}}-${{needs.get_version.outputs.version}}.tar.gz
                  tag_name: v${{needs.get_version.outputs.version}}
                  name: Release v${{needs.get_version.outputs.version}}
                  body: |
                      Release v${{needs.get_version.outputs.version}}

                      Published to npm: https://www.npmjs.com/package/@johnqh/wildduck/v/${{needs.get_version.outputs.version}}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
