{
  "permissions": {
    "allow": [
      "Bash(NODE_ENV=test npx grunt eslint)",
      "Bash(NODE_ENV=test npx grunt mochaTest:api --force)",
      "Bash(cat:*)",
      "Bash(npx grunt eslint:*)",
      "Bash(npm run runtest)",
      "Bash(NODE_ENV=test timeout 30s npx mocha imap-core/test/imap-compile-stream-test.js)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/imap-compile-stream-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/imap-compiler-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/parse-mime-tree-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/imap-parser-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 10000)",
      "Bash(git add:*)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should authenticate\" --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should authenticate\" --timeout 15000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should authenticate\" --timeout 8000)",
      "Bash(NODE_ENV=test node server.js)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should list capabilities\" --timeout 10000)",
      "Bash(pgrep:*)",
      "Bash(lsof:*)",
      "Bash(./prepare.sh:*)",
      "Bash(curl:*)",
      "Bash(telnet:*)",
      "Bash(nc:*)",
      "Bash(node:*)",
      "Bash(xargs kill:*)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/imap-indexer-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/search-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/tools-test.js --timeout 10000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 15000)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should list capabilities\" --timeout 8000)",
      "Bash(NODE_ENV=test node debug-imap-test.js)",
      "Bash(pkill:*)",
      "Bash(NODE_ENV=test node test-capability-simple.js)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 10000 --grep \"CAPABILITY\")",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 10000 --grep \"should authenticate\")",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 10000 --grep \"ID\")",
      "Bash(NODE_ENV=test node test-evm-auth.js)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"CAPABILITY\" --timeout 5000)",
      "Bash(NODE_ENV=test timeout 30s ./prepare.sh wildduck-test)",
      "Bash(NODE_ENV=test gtimeout 30s ./prepare.sh wildduck-test)",
      "Bash(NODE_ENV=test ./prepare.sh wildduck-test)",
      "Bash(INBOXID=\"68cb11f9f41864b2466f4ccc\")",
      "Bash(mongosh:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 5000 --grep \"CAPABILITY\")",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/protocol-test.js --timeout 8000 --grep \"CAPABILITY\")",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/imap-compile-stream-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/imap-compiler-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/search-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/imap-parser-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/tools-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/parse-mime-tree-test.js)",
      "Bash(NODE_ENV=test npx mocha /Users/qianghuang/wildduck/imap-core/test/imap-indexer-test.js)",
      "Bash(grunt eslint:*)",
      "Bash(npm run:*)",
      "Bash(npm start)",
      "Bash(redis-cli:*)",
      "Bash(echo:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/qianghuang/mail_box_indexer"
    ]
  }
}