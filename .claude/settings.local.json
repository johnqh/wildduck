{
  "permissions": {
    "allow": [
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should DELETE /users/{user} expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users expect success|should DELETE /users/{user} expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=false NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users expect success|should DELETE /users/{user} expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha imap-core/test/protocol-test.js --grep \"should return BODY\\[TEXT\\]\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test node -e \"\n// Quick test to check crypto mode message processing\nconst crypto = require(''crypto'');\nconsole.log(''Testing message body processing in crypto mode'');\nconst testContent = ''Hello World!'';\nconsole.log(''Original content:'', JSON.stringify(testContent));\nconsole.log(''With CRLF:'', JSON.stringify(testContent + ''\\r\\n''));\nconsole.log(''Buffer length without CRLF:'', Buffer.byteLength(testContent, ''utf8''));\nconsole.log(''Buffer length with CRLF:'', Buffer.byteLength(testContent + ''\\r\\n'', ''utf8''));\n\")",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 600000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users/{user}/restore expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users expect success|should POST /users/{user}/restore expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users expect success|should DELETE /users/{user} expect success|should POST /users/{user}/restore expect success\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test ./prepare.sh wildduck-test)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha imap-core/test/protocol-test.js --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha protocol-test.js --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npm run runtest)",
      "Bash(export APPCONF_api_cryptoEmails=false)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/addresses-test.js --grep \"should POST /authenticate\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api-test.js --grep \"should POST /authenticate.*expect success$\" --timeout 60000)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test npm test)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api-test.js --timeout 60000)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api-test.js --timeout 60000 --grep \"should GET /users/:user expect success\")",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npm test)",
      "Bash(env)",
      "Bash(APPCONF_api_cryptoEmails=false NODE_ENV=test node test/drop-test-db.js)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test gtimeout 1200 npm test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test timeout 1200 npm test)",
      "Read(///**)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test timeout 600 npm test)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test gtimeout 600 npm test)",
      "Bash(npx grunt mochaTest:*)",
      "Bash(npx mocha test:*)",
      "Bash(APPCONF_api_cryptoEmails=false NODE_ENV=test npm test)",
      "Bash(tee:*)",
      "Bash(node:*)",
      "Bash(NODE_ENV=test node -e \"const config = require(''wild-config''); console.log(''emailDomain:'', config.emailDomain); console.log(''api.emailDomain:'', config.api?.emailDomain); console.log(''Config keys:'', Object.keys(config).slice(0,10));\")",
      "Bash(pkill:*)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test npx grunt shell:server wait:server mochaTest:api)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx grunt shell:server wait:server mochaTest:api)",
      "Bash(redis-cli:*)",
      "Bash(env APPCONF_api_cryptoEmails=true NODE_ENV=test node test/drop-test-db.js)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test npx mocha test/api/users-test.js --grep \"should GET /users/{user} expect failure / using a token and fail against other user\" --timeout 60000)",
      "Bash(APPCONF_api_cryptoEmails=true NODE_ENV=test timeout 600 npm test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test node test/drop-test-db.js)",
      "Bash(NODE_ENV=test node -e \"const config = require(''wild-config''); console.log(''In test mode:''); console.log(''api.port from config:'', config.api?.port); console.log(''dbs.mongo:'', config.dbs?.mongo?.substring(0, 40) + ''...'');\")",
      "Bash(NODE_ENV=test node -e \"const config = require(''wild-config''); console.log(''In test mode:''); console.log(''api.port from config:'', config.api?.port); console.log(''dbs.mongo:'', config.dbs?.mongo?.substring(0, 40) + ''...''); console.log(''accessControl.enabled:'', config.accessControl?.enabled);\")",
      "Bash(NODE_ENV=test node -e \"const config = require(''wild-config''); console.log(''config.api.accessControl:'', config.api.accessControl); console.log(''config.accessControl:'', config.accessControl);\")",
      "Bash(NODE_ENV=test node -e \"const config = require(''wild-config''); console.log(''config.api.accessControl:'', config.api.accessControl);\")",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test timeout 600 npm test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test gtimeout 600 npm test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx mocha test/api-test.js --grep \"should POST /authenticate.*expect success$\" --timeout 60000)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx mocha test/api/users-test.js --grep \"should POST /users expect success\" --timeout 60000)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test ps aux)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test node server.js)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx grunt shell:server wait:server)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test bash -x /Users/johnhuang/0xmail/wildduck/imap-core/test/prepare.sh wildduck-test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test imap-core/test/prepare.sh wildduck-test)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test /Users/johnhuang/0xmail/wildduck/imap-core/test/prepare.sh wildduck-test)",
      "Bash(lsof:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx grunt mochaTest:*)",
      "Bash(env APPCONF_api_cryptoEmails=false NODE_ENV=test npx grunt mochaTest:api)"
    ],
    "deny": [],
    "ask": []
  }
}